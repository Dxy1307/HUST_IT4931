version: "3"
services:
  # Hadoop Namenode
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 8020:8020
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data/data_1m:/datasets
    environment:
      - CLUSTER_NAME=bigdata_cluster
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - bigdata_network

  # Hadoop Datanode
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - bigdata_network

  #zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - bigdata_network

  # kafka
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - bigdata_network

  #spark-master
  spark-master:
    image: bitnami/spark
    build: 
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_SUBMIT_OPTIONS=--packages com.datastax.spark:spark-cassandra-connector_2.12:3.2.0
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark/code:/opt/spark/work-dir
    networks:
      - bigdata_network

  #spark-worker
  spark-worker-1:
    image: bitnami/spark
    build: 
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - SPARK_SUBMIT_OPTIONS=--packages com.datastax.spark:spark-cassandra-connector_2.12:3.2.0
    depends_on:
      - spark-master
    volumes:
      - ./spark/code:/opt/spark/work-dir
    networks:
      - bigdata_network

  spark-worker-2:
    image: bitnami/spark
    build: 
      context: .
      dockerfile: ./spark/Dockerfile
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - SPARK_SUBMIT_OPTIONS=--packages com.datastax.spark:spark-cassandra-connector_2.12:3.2.0
    depends_on:
      - spark-master
    volumes:
      - ./spark/code:/opt/spark/work-dir
    networks:
      - bigdata_network
  
  # cassandra
  cassandra:
    image: 'bitnami/cassandra:latest'
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=bigdata_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
      - CASSANDRA_INIT_SCRIPT=/docker-entrypoint-initdb.d/init.cql
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./cassandra/init.cql:/docker-entrypoint-initdb.d/init.cql
    networks:
      - bigdata_network


volumes:
  hadoop_namenode:
  hadoop_datanode:
  cassandra_data:

networks:
  bigdata_network:
    driver: bridge
    name: bigdata_network
